name: Test & Coverage
on:
  push:
    branches: [ "arvind/fixBuild" ]
  pull_request:
    branches:
      - "arvind/fixBuild"
  workflow_dispatch:
  schedule:
    - cron: '18 18 * * 2'
jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: urlshortner
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - run: echo "The job was triggered on branch ${{ github.ref }}."

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install -r url_shortner_server/requirements.txt
      - name: Run unit test
        run: python url_shortner_server/manage.py test shortner

      - run: echo "üçè This job's status is ${{ job.status }}."
  Angular-Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered on branch ${{ github.ref }}."

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: npm install --prefix ./url-shortner-webapp

      - name: Run Ng Test
        run: npm run ng test -- --watch=false --browsers=ChromeHeadless
        working-directory: url-shortner-webapp
        continue-on-error: false
  Code-Coverage:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered on branch ${{ github.ref }}."

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install -r url_shortner_server/requirements.txt
      - name: Run code coverage
        run: |
          coverage run url_shortner_server/manage.py test shortner
          coverage report --omit=url_shortner_server/shortner/__init__.py
        env:
          DBENGINE: django.db.backends.mysql
          DBNAME: urlshortner
          DBUSER: djangouser
          DBPASSWORD: password
          DBHOST: 127.0.0.1
          DBPORT: $

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2

      - run: echo "üçè This job's status is ${{ job.status }}."
  Angular-Code-Coverage:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered on branch ${{ github.ref }}."

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: npm install --prefix ./url-shortner-webapp

      - name: Code Coverage
        run: npm test -- --code-coverage --watch=false --browsers=ChromeHeadless
        working-directory: url-shortner-webapp
        continue-on-error: false

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2

      - run: echo "üçè This job's status is ${{ job.status }}."
  Lint-Check:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered on branch ${{ github.ref }}."

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install -r url_shortner_server/requirements.txt
      - name: Lint with flake8
        run: flake8
